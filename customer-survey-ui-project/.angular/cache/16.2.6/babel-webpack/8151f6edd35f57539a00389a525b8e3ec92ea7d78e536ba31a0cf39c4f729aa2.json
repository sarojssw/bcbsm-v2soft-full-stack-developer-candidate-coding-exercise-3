{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class LoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.loginname = \"\";\n    this.password = \"\";\n  }\n  login() {\n    console.log(this.loginname);\n    console.log(this.password);\n    let bodyData = {\n      username: this.loginname,\n      password: this.password\n    };\n    this.http.post(\"http://localhost:8081/api/v1/auth/signin\", bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert(resultData.message);\n      if (resultData.message == \"Email not exits\") {\n        alert(\"Email not exits\");\n      } else if (resultData.message == \"Login Success\") {\n        this.router.navigateByUrl('/home');\n      } else {\n        alert(\"Incorrect UserName and Password not match\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"inputLoginName\", \"placeholder\", \"Enter Login Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Enter Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"align\", \"center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"h2\");\n        i0.ɵɵtext(3, \"Login page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\");\n        i0.ɵɵtext(6, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.loginname = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginname)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","router","http","loginname","password","login","console","log","bodyData","username","post","subscribe","resultData","alert","message","navigateByUrl","_","i0","ɵɵdirectiveInject","i1","Router","i2","HttpClient","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵelement","LoginComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["/Users/saswateesahoo/Repo/AngularUI/AngularCustomerSurvey/customer-survey-ui-project/src/app/login/login.component.ts","/Users/saswateesahoo/Repo/AngularUI/AngularCustomerSurvey/customer-survey-ui-project/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginname: string = \"\";\n  password: string = \"\";\n\n  constructor(private router: Router, private  http: HttpClient) {\n  }\n\n  login() {\n    console.log(this.loginname);\n    console.log(this.password);\n\n    let bodyData = {\n      username: this.loginname,\n      password: this.password,\n    };\n\n    this.http.post(\"http://localhost:8081/api/v1/auth/signin\", bodyData).subscribe(  (resultData: any) => {\n      console.log(resultData);\n\n      alert(resultData.message);\n\n      if (resultData.message == \"Email not exits\")\n      {\n\n        alert(\"Email not exits\");\n\n\n      }\n      else if(resultData.message == \"Login Success\")\n\n      {\n        this.router.navigateByUrl('/home');\n      }\n      else\n      {\n        alert(\"Incorrect UserName and Password not match\");\n      }\n    });\n\n  }\n\n\n\n\n\n\n\n\n}\n","<div class=\"container mt-4\">\n  <form>\n    <h2>Login page</h2>\n    <div class=\"form-group\">\n      <label>UserName</label>\n      <input type=\"text\"\n             [(ngModel)]=\"loginname\" [ngModelOptions]=\"{standalone: true}\"\n             class=\"form-control\" id=\"inputLoginName\"  placeholder=\"Enter Login Name\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\"\n             [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\"\n             class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter Password\">\n    </div><br>\n    <div  align=\"center\">\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">Login</button>\n    </div>\n  </form>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}