{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let Login2Component = class Login2Component {\n  constructor(accService, ro) {\n    this.accService = accService;\n    this.ro = ro;\n    this.signupCustomerName = \"\";\n    this.signupUserName = \"\";\n    this.signupPassword = \"\";\n    this.loginUserName = \"\";\n    this.loginPassword = \"\";\n    this.signUpUsers = [];\n    this.signUpObj = {\n      name: '',\n      username: '',\n      password: ''\n    };\n    this.loginObj = {\n      username: '',\n      password: ''\n    };\n  }\n  ngOnInit() {\n    const localData = localStorage.getItem('signUpUsers');\n    if (localData != null) {\n      this.signUpUsers = JSON.parse(localData);\n    }\n  }\n  onSingUp() {\n    this.signUpUsers.push(this.signUpObj);\n    localStorage.setItem('signUpUsers', JSON.stringify(this.signUpUsers));\n    this.signUpObj = {\n      signUpCustomerName: '',\n      signUpUserName: '',\n      password: ''\n    };\n  }\n  onLogin() {\n    debugger;\n    /* const isUserExist = this.signUpUsers.find(m => m.signUpUserName == this.loginObj.loginUserName && m.password == this.loginObj.password)\n     if(isUserExist != undefined){\n       alert('User login successfully');\n     } else {\n       alert('Wrong credentials');\n     }*/\n    this.accService.onLogin(this.loginObj).subscribe(resp => {\n      debugger;\n      console.log('resp', resp);\n      localStorage.setItem('token', resp.token);\n    });\n  }\n};\nLogin2Component = __decorate([Component({\n  selector: 'app-login2',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.component.scss']\n})], Login2Component);","map":{"version":3,"names":["Component","Login2Component","constructor","accService","ro","signupCustomerName","signupUserName","signupPassword","loginUserName","loginPassword","signUpUsers","signUpObj","name","username","password","loginObj","ngOnInit","localData","localStorage","getItem","JSON","parse","onSingUp","push","setItem","stringify","signUpCustomerName","signUpUserName","onLogin","subscribe","resp","console","log","token","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/saswateesahoo/Repo/AngularUI/AngularCustomerSurvey/customer-survey-ui-project/src/app/login2/login2.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AccountService} from \"../account.service\";\n\n@Component({\n  selector: 'app-login2',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.component.scss'],\n})\nexport class Login2Component {\n\n  signupCustomerName: string = \"\";\n  signupUserName: string = \"\";\n  signupPassword: string = \"\";\n  loginUserName: string = \"\";\n  loginPassword: string = \"\";\n\n  signUpUsers: any[] = [];\n  signUpObj:any = {\n    name: '',\n    username: '',\n    password: ''\n  };\n  loginObj:any = {\n    username: '',\n    password: ''\n  };\n\n  constructor(private accService : AccountService, private ro) {\n  }\n\n  ngOnInit(): void{\n    const localData = localStorage.getItem('signUpUsers');\n    if(localData!=null){\n      this.signUpUsers = JSON.parse(localData);\n    }\n  }\n\n  onSingUp(): void{\n    this.signUpUsers.push(this.signUpObj);\n    localStorage.setItem('signUpUsers', JSON.stringify(this.signUpUsers))\n    this.signUpObj = {\n      signUpCustomerName: '',\n      signUpUserName: '',\n      password: ''\n    };\n  }\n\n  onLogin(): void{\n    debugger\n   /* const isUserExist = this.signUpUsers.find(m => m.signUpUserName == this.loginObj.loginUserName && m.password == this.loginObj.password)\n    if(isUserExist != undefined){\n      alert('User login successfully');\n    } else {\n      alert('Wrong credentials');\n    }*/\n\n    this.accService.onLogin(this.loginObj).subscribe((resp: any) => {\n      debugger\n      console.log('resp', resp);\n      localStorage.setItem('token',resp.token);\n    })\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAmB1BC,YAAoBC,UAA2B,EAAUC,EAAE;IAAvC,KAAAD,UAAU,GAAVA,UAAU;IAA2B,KAAAC,EAAE,GAAFA,EAAE;IAjB3D,KAAAC,kBAAkB,GAAW,EAAE;IAC/B,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,aAAa,GAAW,EAAE;IAE1B,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,SAAS,GAAO;MACdC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX;IACD,KAAAC,QAAQ,GAAO;MACbF,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX;EAGD;EAEAE,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,IAAGF,SAAS,IAAE,IAAI,EAAC;MACjB,IAAI,CAACP,WAAW,GAAGU,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;;EAE5C;EAEAK,QAAQA,CAAA;IACN,IAAI,CAACZ,WAAW,CAACa,IAAI,CAAC,IAAI,CAACZ,SAAS,CAAC;IACrCO,YAAY,CAACM,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,SAAS,CAAC,IAAI,CAACf,WAAW,CAAC,CAAC;IACrE,IAAI,CAACC,SAAS,GAAG;MACfe,kBAAkB,EAAE,EAAE;MACtBC,cAAc,EAAE,EAAE;MAClBb,QAAQ,EAAE;KACX;EACH;EAEAc,OAAOA,CAAA;IACL;IACD;;;;;;IAOC,IAAI,CAACzB,UAAU,CAACyB,OAAO,CAAC,IAAI,CAACb,QAAQ,CAAC,CAACc,SAAS,CAAEC,IAAS,IAAI;MAC7D;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;MACzBZ,YAAY,CAACM,OAAO,CAAC,OAAO,EAACM,IAAI,CAACG,KAAK,CAAC;IAC1C,CAAC,CAAC;EACJ;CAED;AAvDYhC,eAAe,GAAAiC,UAAA,EAL3BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWpC,eAAe,CAuD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}