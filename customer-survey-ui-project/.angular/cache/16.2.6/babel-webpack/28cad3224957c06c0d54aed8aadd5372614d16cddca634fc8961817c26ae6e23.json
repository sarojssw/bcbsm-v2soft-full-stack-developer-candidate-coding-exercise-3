{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.userObj = {\n      username: ''\n    };\n  }\n  onLogin(obj) {\n    return this.http.post('http://localhost:8081/api/v1/auth/signin', obj);\n  }\n  getFeedback() {\n    debugger;\n    alert(localStorage.getItem('userrole'));\n    const userRole = localStorage.getItem('userrole');\n    if (userRole == 'Admin') {\n      return this.http.get('http://localhost:8081/api/v1/admin/feedback/view');\n    } else {\n      let bodyData = {\n        \"username\": localStorage.getItem('username')\n      };\n      return this.http.post('http://localhost:8081/api/v1/user/feedback/view', bodyData);\n    }\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AccountService","constructor","http","userObj","username","onLogin","obj","post","getFeedback","alert","localStorage","getItem","userRole","get","bodyData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/saswateesahoo/Repo/AngularUI/AngularCustomerSurvey/customer-survey-ui-project/src/app/account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  userObj:any = {\n    username: ''\n  };\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(obj: any) : Observable<any>{\n    return this.http.post('http://localhost:8081/api/v1/auth/signin', obj);\n  }\n\n  getFeedback() : Observable<any>{\n    debugger\n    alert(localStorage.getItem('userrole'));\n    const userRole = localStorage.getItem('userrole');\n\n    if(userRole == 'Admin'){\n      return this.http.get('http://localhost:8081/api/v1/admin/feedback/view');\n    } else {\n      let bodyData = {\n        \"username\" : localStorage.getItem('username')\n      };\n      return this.http.post('http://localhost:8081/api/v1/user/feedback/view', bodyData);\n    }\n\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,OAAO,GAAO;MACZC,QAAQ,EAAE;KACX;EAEuC;EAExCC,OAAOA,CAACC,GAAQ;IACd,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,0CAA0C,EAAED,GAAG,CAAC;EACxE;EAEAE,WAAWA,CAAA;IACT;IACAC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACvC,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAGC,QAAQ,IAAI,OAAO,EAAC;MACrB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,kDAAkD,CAAC;KACzE,MAAM;MACL,IAAIC,QAAQ,GAAG;QACb,UAAU,EAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU;OAC7C;MACD,OAAO,IAAI,CAACT,IAAI,CAACK,IAAI,CAAC,iDAAiD,EAAEO,QAAQ,CAAC;;EAGtF;EAAC,QAAAC,CAAA,G;qBA1BUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}